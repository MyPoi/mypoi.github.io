<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Jdbc的起步</title>
      <link href="/2022/01/23/Jdbc%E8%B5%B7%E6%AD%A5/"/>
      <url>/2022/01/23/Jdbc%E8%B5%B7%E6%AD%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><p>前言</p><p><img src="https://gitee.com/yoyosave/blog-image/raw/master/imgs/image-20211108110936488.png" alt="image-20211108110936488"></p><p>模拟sun公司以及mysql公司之间的关系</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YoMo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> pro3 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OracleCompany</span> <span class="keyword">implements</span> <span class="title">JdbcInterface</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getConnetion</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;成功连接Oracl数据库&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YoMo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> pro3 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySqlCompany</span> <span class="keyword">implements</span> <span class="title">JdbcInterface</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getConnetion</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;成功连接Mysql数据库&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YoMo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> pro3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JavaProgrammer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//父类引用指向子类对象</span></span><br><span class="line">        JdbcInterface jdbc1 = <span class="keyword">new</span> MySqlCompany();</span><br><span class="line">        JdbcInterface jdbc2 = <span class="keyword">new</span> OracleCompany();</span><br><span class="line"></span><br><span class="line">        jdbc1.getConnetion();</span><br><span class="line">        jdbc2.getConnetion();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.yy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YoMo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> pro3 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//注册驱动</span></span><br><span class="line">            DriverManager.registerDriver(<span class="keyword">new</span> com.mysql.cj.jdbc.Driver());</span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取连接</span></span><br><span class="line">            String url = <span class="string">&quot;jdbc:mysql://localhost:3306/test&quot;</span>;</span><br><span class="line">            String user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">            String password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">            Connection connection = DriverManager.getConnection(url, user, password);</span><br><span class="line"></span><br><span class="line">            System.out.println(connection);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="red">server time zone value ‘�й���׼ʱ��’ is unrecognized</font></p><p>没有设置时区</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/test?serverTimezone=GMT&amp;useSSL=false&quot;</span>;</span><br><span class="line"><span class="comment">//设置时区</span></span><br><span class="line">serverTimezone=GMT</span><br><span class="line"><span class="comment">//关闭安全协议</span></span><br><span class="line">useSSL=<span class="keyword">false</span></span><br></pre></td></tr></table></figure><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h3 id="注册驱动"><a href="#注册驱动" class="headerlink" title="注册驱动"></a>注册驱动</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DriverManager.registerDriver( <span class="keyword">new</span> com.mysql.cj.jdbc.Driver());</span><br></pre></td></tr></table></figure><h3 id="获取连接"><a href="#获取连接" class="headerlink" title="获取连接"></a>获取连接</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/test?serverTimezone=GMT&amp;useSSL=false&quot;</span>;</span><br><span class="line">String user = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">String password = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">Connection connection = DriverManager.getConnection(url, user, password);</span><br></pre></td></tr></table></figure><h3 id="执行Sql语句"><a href="#执行Sql语句" class="headerlink" title="执行Sql语句"></a>执行Sql语句</h3><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>增删改都调用了<code>executeUpdate(sql)</code>方法</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot; 实例化Statement对象...&quot;</span>);</span><br><span class="line">stmt = connection.createStatement();</span><br><span class="line">String sql;</span><br><span class="line">sql = <span class="string">&quot;insert into test(id,username,age,password)values(3,&#x27;陈小二&#x27;,15,&#x27;12467&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> count = stmt.executeUpdate(sql);</span><br><span class="line">System.out.println(<span class="string">&quot;影响了数据数据库中的多少数据：&quot;</span>+count);</span><br></pre></td></tr></table></figure><h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">sql = <span class="string">&quot;SELECT * FROM test&quot;</span>;</span><br><span class="line">ResultSet rs = stmt.executeQuery(sql);</span><br></pre></td></tr></table></figure><p>展开结果集</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 展开结果集数据库</span></span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">    <span class="comment">// 通过字段检索</span></span><br><span class="line">    <span class="keyword">int</span> id  = rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    String username = rs.getString(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    String age = rs.getString(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">    String pwd = rs.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出数据</span></span><br><span class="line">    System.out.print(<span class="string">&quot;ID: &quot;</span> + id);</span><br><span class="line">    System.out.print(<span class="string">&quot;,name &quot;</span> + username);</span><br><span class="line">    System.out.print(<span class="string">&quot;,age &quot;</span> + age);</span><br><span class="line">    System.out.print(<span class="string">&quot;,password &quot;</span> + pwd);</span><br><span class="line">    System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="关闭流"><a href="#关闭流" class="headerlink" title="关闭流"></a>关闭流</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        stmt.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为保证资源一定能得到释放，在finally语句块中关闭资源，并且遵循从小到大一次关闭</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (stmt != <span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        stmt.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">        throwables.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (connection != <span class="keyword">null</span>)&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">        throwables.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册驱动的第二种方式</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure><p>创建配置文件<code>XXX.properties</code></p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driverClass</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/test?serverTimezone=GMT&amp;useSSL=false&amp;characterEncoding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">user</span>=<span class="string">root</span></span><br><span class="line"></span><br><span class="line"><span class="attr">password</span> = <span class="string">123456</span></span><br></pre></td></tr></table></figure><p>调用配置文件</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.study.yy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YoMo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> pro3 1.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 从数据库配置文件中获取数据库配置信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcDemo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        Statement  statement = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取数据库配置信息</span></span><br><span class="line">        ResourceBundle resourceBundle = ResourceBundle.getBundle(<span class="string">&quot;jdbc&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String driverClass = resourceBundle.getString(<span class="string">&quot;driverClass&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String url = resourceBundle.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String user = resourceBundle.getString(<span class="string">&quot;user&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String password = resourceBundle.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注册驱动</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driverClass);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = DriverManager.getConnection(url,user,password);</span><br><span class="line"></span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">            String sql;</span><br><span class="line">            sql = <span class="string">&quot;update test set username=&#x27;王小二&#x27; where username=&#x27;陈小二&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> i = statement.executeUpdate(sql);</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;修改了数据的数据量&quot;</span>+ i );</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">            throwables.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (statement != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    statement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                    throwables.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                    throwables.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好处：之后就不用一个一个去配置</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdbc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/23/hello-world/"/>
      <url>/2022/01/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>进程调度算法</title>
      <link href="/2022/01/23/%E6%A8%A1%E6%8B%9F%E5%A4%84%E7%90%86%E5%99%A8%E8%B0%83%E5%BA%A6/"/>
      <url>/2022/01/23/%E6%A8%A1%E6%8B%9F%E5%A4%84%E7%90%86%E5%99%A8%E8%B0%83%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="进程调度算法"><a href="#进程调度算法" class="headerlink" title="进程调度算法"></a>进程调度算法</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><blockquote><p>在采用多道程序设计的系统中，往往有若干个进程同时处于就绪状态。当就绪进程个数大于处理器数时，就必须依照某种策略来决定哪些进程优先占用处理器。本实习模拟在单处理器情况下的处理器调度，帮助学生加深了解处理器调度的工作。</p></blockquote><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><blockquote><p>设计一个按优先数调度算法实现处理器调度的程序。</p></blockquote><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><ol><li>假定系统有五个进程，每一个进程用一个进程控制块PCB来代表，进程控制块的格式为：</li></ol><table><thead><tr><th align="center">进程名</th></tr></thead><tbody><tr><td align="center">指针</td></tr><tr><td align="center">要求运行时间</td></tr><tr><td align="center">优先数</td></tr><tr><td align="center">状态</td></tr></tbody></table><p>​    其中，进程名——作为进程的标识，假设五个进程的进程名分别为P1，P2，P3，P4，P5。</p><p>​    指针——按优先数的大小把五个进程连成队列，用指针指出下一个进程的进程控制块的首地址，最后一个进程中的指针为“0”。</p><p>​    要求运行时间——假设进程需要运行的单位时间数。</p><p>​    优先数——赋予进程的优先数，调度时总是选取优先数大的进程先执行。</p><p>​    状态——可假设有两种状态，“就绪”状态和“结束”状态。五个进程的初始状态都为“就绪”，用“R”表示，当一个进程运行结束后，它的状态为“结束”，用“E”表示。</p><ol start="2"><li><p>在每次运行你所设计的处理器调度程序之前，为每个进程任意确定它的“优先数”和“要求运行时间”。</p></li><li><p>为了调度方便，把五个进程按给定的优先数从大到小连成队列。用一单元指出队首进程，用指针指出队列的连接情况。例：</p></li></ol><p> 队首标志</p><p>​     K2  </p><table><thead><tr><th>K1</th><th>P1</th><th>K2</th><th>P2</th><th>K3</th><th>P3</th><th>K4</th><th>P4</th><th>K5</th><th>P5</th></tr></thead><tbody><tr><td></td><td>0</td><td></td><td>K4</td><td></td><td>K5</td><td></td><td>K3</td><td></td><td>K1</td></tr><tr><td></td><td>2</td><td></td><td>3</td><td></td><td>1</td><td></td><td>2</td><td></td><td>4</td></tr><tr><td></td><td>1</td><td></td><td>5</td><td></td><td>3</td><td></td><td>4</td><td></td><td>2</td></tr><tr><td></td><td>R</td><td></td><td>R</td><td></td><td>R</td><td></td><td>R</td><td></td><td>R</td></tr><tr><td></td><td>PCB1</td><td></td><td>PCB2</td><td></td><td>PCB3</td><td></td><td>PCB4</td><td></td><td>PCB5</td></tr></tbody></table><ol start="4"><li>处理器调度总是选队首进程运行。采用动态改变优先数的办法，进程每运行一次优先数就减“1”。由于本实习是模拟处理器调度，所以，对被选中的进程并不实际的启动运行，而是执行：<ul><li>优先数-1</li><li>要求运行时间-1</li></ul></li></ol><p>​    来模拟进程的一次运行。</p><p>​    提醒注意的是：在实际的系统中，当一个进程被选中运行时，必须恢复进程的现场，让它占有处理器运行，直到出现等待事件或运行结束。在这里省去了这些工作。</p><ol start="5"><li><p>进程运行一次后，若要求运行时间¹0，则再将它加入队列（按优先数大小插入，且置队首标志）；若要求运行时间=0，则把它的状态修改成“结束”（E），且退出队列。</p></li><li><p>若“就绪”状态的进程队列不为空，则重复上面（4）和（5）的步骤，直到所有进程都成为“结束”状态。</p></li><li><p>在所设计的程序中应有显示或打印语句，能显示或打印每次被选中进程的进程名以及运行一次后进程队列的变化。</p></li><li><p>为五个进程任意确定一组“优先数”和“要求运行时间”，启动所设计的处理器调度程序，显示或打印逐次被选中进程的进程名以及进程控制块的动态变化过程。</p></li></ol><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><h3 id="定义进程类"><a href="#定义进程类" class="headerlink" title="定义进程类"></a>定义进程类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pcb</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> time;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> pri;</span><br><span class="line">    <span class="keyword">public</span> String state = <span class="string">&quot;R&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Pcb</span><span class="params">(String name, <span class="keyword">int</span> time, <span class="keyword">int</span> pri)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.time = time;</span><br><span class="line">        <span class="keyword">this</span>.pri = pri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;名字=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, 运行时间=&quot;</span> + time +</span><br><span class="line">                <span class="string">&quot;, 优先级=&quot;</span> + pri +</span><br><span class="line">                <span class="string">&quot;, 状态=&#x27;&quot;</span> + state + <span class="string">&#x27;\&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用来存放进程名，优先级，运行时间，进程状态</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addrun</span><span class="params">(List&lt;Pcb&gt; pcbs, List&lt;Integer&gt; list_i)</span> </span>&#123;</span><br><span class="line">     pcbs.get(list_i.get(<span class="number">0</span>)).pri -= <span class="number">1</span>;</span><br><span class="line">     pcbs.get(list_i.get(<span class="number">0</span>)).time -= <span class="number">1</span>;</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">         <span class="keyword">if</span> (pcbs.get(i).time &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">             pcbs.get(i).state = <span class="string">&quot;E&quot;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;详细：&quot;</span>);</span><br><span class="line">    System.out.println(pcbs.get(list_i.get(<span class="number">0</span>)).toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调度算法的主体，每一次找最大优先级，找到后，优先级减一，运行时间减一</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//list_i存放最大优先级的下标，如果列表中的元素有多个就说明最大优先级有多个</span></span><br><span class="line"><span class="keyword">if</span> (list_i.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pcbs.get(list_i.get(<span class="number">0</span>)).time &lt; pcbs.get(list_i.get(<span class="number">1</span>)).time) &#123;</span><br><span class="line">                addrun(pcbs, list_i);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                pcbs.get(list_i.get(<span class="number">1</span>)).pri -= <span class="number">1</span>;</span><br><span class="line">                pcbs.get(list_i.get(<span class="number">1</span>)).time -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (pcbs.get(i).time &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                        pcbs.get(i).state = <span class="string">&quot;E&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;详细：&quot;</span>);</span><br><span class="line">                System.out.println(pcbs.get(list_i.get(<span class="number">1</span>)).toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            addrun(pcbs, list_i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;全局：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">            System.out.println(pcbs.get(i).toString());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>当然也有同时存在多个最大优先级的情况，当遇到这种情况的时候我们要对其进行运行时间的判断，运行时间短的优先，并且如果运行时间相同，我们就先来先执行</p><p>全部源码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPro</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;Pcb&gt; pcbs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        pcbs.add(<span class="keyword">new</span> Pcb(<span class="string">&quot;p1&quot;</span>, <span class="number">2</span>, <span class="number">1</span>));</span><br><span class="line">        pcbs.add(<span class="keyword">new</span> Pcb(<span class="string">&quot;p2&quot;</span>, <span class="number">3</span>, <span class="number">5</span>));</span><br><span class="line">        pcbs.add(<span class="keyword">new</span> Pcb(<span class="string">&quot;p3&quot;</span>, <span class="number">1</span>, <span class="number">3</span>));</span><br><span class="line">        pcbs.add(<span class="keyword">new</span> Pcb(<span class="string">&quot;p4&quot;</span>, <span class="number">2</span>, <span class="number">4</span>));</span><br><span class="line">        pcbs.add(<span class="keyword">new</span> Pcb(<span class="string">&quot;p5&quot;</span>, <span class="number">4</span>, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum_runtime = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">            sum_runtime += pcbs.get(i).time;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (sum_runtime &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> m;</span><br><span class="line">            System.out.println(<span class="string">&quot;是否插入数据（0.不插入,1.插入）&quot;</span>);</span><br><span class="line">            m = sc.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (m == <span class="number">1</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入进程名&quot;</span>);</span><br><span class="line">                String str = sc.next();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入运行时间&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> runtime = sc.nextInt();</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入优先级&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> pris = sc.nextInt();</span><br><span class="line">                pcbs.add(<span class="keyword">new</span> Pcb(str, runtime, pris));</span><br><span class="line">                sum_runtime += runtime;</span><br><span class="line">            &#125;</span><br><span class="line">            run(pcbs);</span><br><span class="line">            sum_runtime--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(List&lt;Pcb&gt; pcbs)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置优先级</span></span><br><span class="line">        <span class="keyword">int</span> max = -<span class="number">100</span>;</span><br><span class="line">        <span class="comment">//设置存放优先级的列表</span></span><br><span class="line">        List&lt;Integer&gt; list_i = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        <span class="comment">//设置存放运行时间的</span></span><br><span class="line"><span class="comment">//        List&lt;Integer&gt; list_time = new ArrayList&lt;Integer&gt;();</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (pcbs.get(i).state.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">               <span class="keyword">if</span> (max &lt; pcbs.get(i).pri) &#123;</span><br><span class="line">                   max = pcbs.get(i).pri;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pcbs.get(i).state.equals(<span class="string">&quot;R&quot;</span>))&#123;</span><br><span class="line">                <span class="keyword">if</span> (max == pcbs.get(i).pri) &#123;</span><br><span class="line">                    list_i.add(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (list_i.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pcbs.get(list_i.get(<span class="number">0</span>)).time &lt; pcbs.get(list_i.get(<span class="number">1</span>)).time) &#123;</span><br><span class="line">                addrun(pcbs, list_i);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                pcbs.get(list_i.get(<span class="number">1</span>)).pri -= <span class="number">1</span>;</span><br><span class="line">                pcbs.get(list_i.get(<span class="number">1</span>)).time -= <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (pcbs.get(i).time &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                        pcbs.get(i).state = <span class="string">&quot;E&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.println(<span class="string">&quot;详细：&quot;</span>);</span><br><span class="line">                System.out.println(pcbs.get(list_i.get(<span class="number">1</span>)).toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            addrun(pcbs, list_i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;全局：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">            System.out.println(pcbs.get(i).toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addrun</span><span class="params">(List&lt;Pcb&gt; pcbs, List&lt;Integer&gt; list_i)</span> </span>&#123;</span><br><span class="line">        pcbs.get(list_i.get(<span class="number">0</span>)).pri -= <span class="number">1</span>;</span><br><span class="line">        pcbs.get(list_i.get(<span class="number">0</span>)).time -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (pcbs.get(i).time &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                pcbs.get(i).state = <span class="string">&quot;E&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;详细：&quot;</span>);</span><br><span class="line">        System.out.println(pcbs.get(list_i.get(<span class="number">0</span>)).toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 操作系统 </tag>
            
            <tag> 进程调度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学生宿舍管理系统</title>
      <link href="/2022/01/23/%E5%AD%A6%E7%94%9F%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/01/23/%E5%AD%A6%E7%94%9F%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="宿舍管理系统"><a href="#宿舍管理系统" class="headerlink" title="宿舍管理系统"></a>宿舍管理系统</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​    学生宿舍管理是现代学校不可或缺的一部分，信息技术的飞速发展已使其面世不可避免。我们必须认真理解这个项目的重要性。</p><p>​    同时这个项目也能帮助我们更好的理解javaweb项目的开发流程。运行机制。</p><h2 id="项目内容"><a href="#项目内容" class="headerlink" title="项目内容"></a>项目内容</h2><h3 id="基本功能需求"><a href="#基本功能需求" class="headerlink" title="基本功能需求"></a>基本功能需求</h3><p>​    主要实现是学生高校宿舍管理系统，该系统应尽可能靠近用户，以方便用户在设计 系统时进行操作。系统应实现以下功能。</p><ol><li><p>要使用系统，您需要输入正确的帐号和密码才能进入系统。 </p></li><li><p>系统提供可以根据角色分配的一般用户管理权限，并且可以根据实现情况添加或 删除信息。 </p></li><li><p>系统应为一般用户提供信息查询功能（以各种方式查找）和统计功能。 </p></li><li><p>系统应提供信息保留功能，以更正和删除学生信息。 </p></li><li><p>系统应提供超级管理员的功能来添加和删除用户帐户。</p></li></ol><h3 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h3><p>搞笑宿舍管理系统的主要功能是宿舍管理员管理，宿舍管理，学生管理考勤管理。修改密码</p><p>功能模块图</p><p><img src="E:\date\blog\clip_image002.jpg" alt="img"></p><h2 id="项目过程"><a href="#项目过程" class="headerlink" title="项目过程"></a>项目过程</h2><p>Controller层接收前端的数据，然后发送给service层service层决定具体服务，然后发送给dao层实现并返回结果</p><h3 id="功能一：登录"><a href="#功能一：登录" class="headerlink" title="功能一：登录"></a>功能一：登录</h3><p>Controller进行判断，错误就跳转原页面，正确就跳转主页面，并把登录信息保存在cookie中</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//防止乱码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">//接收用户输入的信息，与name值一致</span></span><br><span class="line">        String stuCode = req.getParameter(<span class="string">&quot;stuCode&quot;</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        String remember = req.getParameter(<span class="string">&quot;remember&quot;</span>);</span><br><span class="line">        <span class="comment">//根据账号密码校验，查询数据库</span></span><br><span class="line">        User user = userService.findUserByStuCodeAndPassWord(stuCode, password);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//有误</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;你输入的信息有误，请重试&quot;</span>);</span><br><span class="line">            <span class="comment">//跳转原本页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;index.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//正确</span></span><br><span class="line">            <span class="comment">//将用户信息存入session中</span></span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;session_user&quot;</span>,user);</span><br><span class="line">            <span class="comment">//将用户登录信息存入cookie中</span></span><br><span class="line">            <span class="keyword">if</span> (remember != <span class="keyword">null</span> &amp;&amp; remember.equals(<span class="string">&quot;remember-me&quot;</span>)) CookieUtils.addCookie(<span class="string">&quot;cookie_stucode_pwd&quot;</span>,<span class="number">7</span>*<span class="number">24</span>*<span class="number">3600</span>,req,resp,stuCode,password);</span><br><span class="line">            <span class="comment">//跳转主页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="功能二：宿舍管理员管理"><a href="#功能二：宿舍管理员管理" class="headerlink" title="功能二：宿舍管理员管理"></a>功能二：宿舍管理员管理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取前端请求</span></span><br><span class="line">        String action = req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        DormBuildService dormService = <span class="keyword">new</span> DormBuildServiceImpl();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;list&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//查询所有用户</span></span><br><span class="line">            <span class="comment">//调用相应的服务</span></span><br><span class="line">            String searchType = req.getParameter(<span class="string">&quot;searchType&quot;</span>);</span><br><span class="line">            String keyword = req.getParameter(<span class="string">&quot;keyword&quot;</span>);</span><br><span class="line">            List&lt;User&gt; search = userService.getDormManager(searchType, keyword);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;users&quot;</span>,search);</span><br><span class="line">            <span class="comment">//返回相应的页面</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;dormManagerList.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preAdd&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//2、调用查询所有的宿舍楼的服务</span></span><br><span class="line">            List&lt;DormBuild&gt; dormBuilds = dormService.getAllDormBuild();</span><br><span class="line">            req.setAttribute(<span class="string">&quot;builds&quot;</span>,dormBuilds);</span><br><span class="line">            <span class="comment">//返回页面</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;dormManagerAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;save&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">// 获取前段请求的数据</span></span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            String name = req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">            String passWord = req.getParameter(<span class="string">&quot;passWord&quot;</span>);</span><br><span class="line">            String sex = req.getParameter(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">            String tel = req.getParameter(<span class="string">&quot;tel&quot;</span>);</span><br><span class="line">            String[] dormBuildIds = req.getParameterValues(<span class="string">&quot;dormBuildId&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (id == <span class="keyword">null</span> || id.equals(<span class="string">&quot;&quot;</span>))&#123;</span><br><span class="line"></span><br><span class="line">                User user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setName(name);</span><br><span class="line">                user.setPassword(passWord);</span><br><span class="line">                user.setSex(sex);</span><br><span class="line">                user.setTel(tel);</span><br><span class="line">                user.setRoleId(<span class="number">1</span>);</span><br><span class="line">                user.setDisabled(<span class="number">0</span>);</span><br><span class="line">                User login_user = (User) req.getSession().getAttribute(<span class="string">&quot;session_user&quot;</span>);</span><br><span class="line">                user.setCreateUserId(login_user.getId());</span><br><span class="line">                <span class="comment">// 调用相应的服务</span></span><br><span class="line">                userService.saveManagerAndBuilds(user,dormBuildIds);</span><br><span class="line">                <span class="comment">// 返回页面</span></span><br><span class="line">                resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/dormManager.action?action=list&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//修改宿舍楼管理员信息</span></span><br><span class="line">                User user = userService.getDormManagerById(Integer.parseInt(id));</span><br><span class="line">                user.setName(name);</span><br><span class="line">                user.setPassword(passWord);</span><br><span class="line">                user.setSex(sex);</span><br><span class="line">                user.setTel(tel);</span><br><span class="line">                user.setDisabled(<span class="number">0</span>);</span><br><span class="line">                <span class="comment">//调用相应的服务</span></span><br><span class="line">                userService.updateManager(user);</span><br><span class="line">                <span class="comment">//修改宿舍楼管理员管理的楼栋信息</span></span><br><span class="line">                <span class="comment">// 先删除旧的再添加新的</span></span><br><span class="line">                dormService.deleteDormBuildsByUserId(user.getId());</span><br><span class="line">                dormService.addDormBuildByUserId(user.getId(),dormBuildIds);</span><br><span class="line">                <span class="comment">// 返回页面</span></span><br><span class="line">                resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/dormManager.action?action=list&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preUpdate&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//接收请求的数据</span></span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            <span class="comment">//调用服务</span></span><br><span class="line">            User manager = userService.getDormManagerById(Integer.parseInt(id));</span><br><span class="line">            List&lt;DormBuild&gt; dormBuildList = dormService.getAllDormBuild();</span><br><span class="line">            req.setAttribute(<span class="string">&quot;builds&quot;</span>,dormBuildList);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;user&quot;</span>,manager);</span><br><span class="line">            <span class="comment">//获取管理的楼栋信息</span></span><br><span class="line">            List&lt;DormBuild&gt; dormBuilds = dormService.getManagerDormBuildsByUserId(manager.getId());</span><br><span class="line">            ArrayList&lt;Integer&gt; userBuilds = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (DormBuild dormBuild : dormBuilds) &#123;</span><br><span class="line">                userBuilds.add(dormBuild.getId());</span><br><span class="line">            &#125;</span><br><span class="line">            req.setAttribute(<span class="string">&quot;userBuildids&quot;</span>,userBuilds);</span><br><span class="line">            <span class="comment">//返回页面</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;dormManagerAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;deleteOrAcive&quot;</span>.equals(action))&#123;</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            String disabled = req.getParameter(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line"></span><br><span class="line">            User user = userService.getDormManagerById(Integer.parseInt(id));</span><br><span class="line">            user.setDisabled(Integer.parseInt(disabled));</span><br><span class="line">            userService.updateManager(user);</span><br><span class="line">            resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/dormManager.action?action=list&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="功能三：学生管理"><a href="#功能三：学生管理" class="headerlink" title="功能三：学生管理"></a>功能三：学生管理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        String action = req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        DormBuildService dormService = <span class="keyword">new</span> DormBuildServiceImpl();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;list&quot;</span>.equals(action))&#123;</span><br><span class="line">            String searchType = req.getParameter(<span class="string">&quot;searchType&quot;</span>);</span><br><span class="line">            String keyword = req.getParameter(<span class="string">&quot;keyword&quot;</span>);</span><br><span class="line">            String dormBuildId = req.getParameter(<span class="string">&quot;dormBuildId&quot;</span>);</span><br><span class="line">            List&lt;User&gt; users = userService.getStudent(searchType, keyword,dormBuildId);</span><br><span class="line">            List&lt;DormBuild&gt; dormBuilds = dormService.getAllDormBuild();</span><br><span class="line">            req.setAttribute(<span class="string">&quot;builds&quot;</span>,dormBuilds);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;students&quot;</span>,users);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;studentList.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preAdd&quot;</span>.equals(action))&#123;</span><br><span class="line">            DormBuildService dormBuildService = <span class="keyword">new</span> DormBuildServiceImpl();</span><br><span class="line">            List&lt;DormBuild&gt; dormBuilds = dormBuildService.getAllDormBuild();</span><br><span class="line">            req.setAttribute(<span class="string">&quot;builds&quot;</span>,dormBuilds);</span><br><span class="line">            <span class="comment">//返回页面</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;studentAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;save&quot;</span>.equals(action))&#123;</span><br><span class="line">            String stuCode = req.getParameter(<span class="string">&quot;stuCode&quot;</span>);</span><br><span class="line">            String name = req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">            String sex = req.getParameter(<span class="string">&quot;sex&quot;</span>);</span><br><span class="line">            String tel = req.getParameter(<span class="string">&quot;tel&quot;</span>);</span><br><span class="line">            String passWord = req.getParameter(<span class="string">&quot;passWord&quot;</span>);</span><br><span class="line">            String dormBuildId = req.getParameter(<span class="string">&quot;dormBuildId&quot;</span>);</span><br><span class="line">            String dormCode = req.getParameter(<span class="string">&quot;dormCode&quot;</span>);</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (id == <span class="keyword">null</span> || id.equals(<span class="string">&quot;&quot;</span>))&#123;</span><br><span class="line">                User user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setName(name);</span><br><span class="line">                user.setPassword(passWord);</span><br><span class="line">                user.setSex(sex);</span><br><span class="line">                user.setTel(tel);</span><br><span class="line">                user.setStuCode(stuCode);</span><br><span class="line">                user.setDormBuildId(Integer.parseInt(dormBuildId));</span><br><span class="line">                user.setDormCode(dormCode);</span><br><span class="line">                user.setRoleId(<span class="number">2</span>);</span><br><span class="line">                user.setDisabled(<span class="number">0</span>);</span><br><span class="line">                User login_user = (User) req.getSession().getAttribute(<span class="string">&quot;session_user&quot;</span>);</span><br><span class="line">                user.setCreateUserId(login_user.getId());</span><br><span class="line"></span><br><span class="line">                userService.saveStudent(user);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                User student = userService.getStudentById(Integer.parseInt(id));</span><br><span class="line">                student.setName(name);</span><br><span class="line">                student.setStuCode(stuCode);</span><br><span class="line">                student.setSex(sex);</span><br><span class="line">                student.setTel(tel);</span><br><span class="line">                student.setPassword(passWord);</span><br><span class="line">                student.setDormBuildId(Integer.parseInt(dormBuildId));</span><br><span class="line">                student.setDormCode(dormCode);</span><br><span class="line">                student.setDisabled(<span class="number">0</span>);</span><br><span class="line">                userService.updateStudent(student);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//返回页面，重定向</span></span><br><span class="line">            resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/student.action?action=list&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preUpdate&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//接收请求的数据</span></span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            User student = userService.getStudentById(Integer.parseInt(id));</span><br><span class="line">            List&lt;DormBuild&gt; dormBuildList = dormService.getAllDormBuild();</span><br><span class="line">            req.setAttribute(<span class="string">&quot;userUpdate&quot;</span>,student);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;builds&quot;</span>,dormBuildList);</span><br><span class="line"></span><br><span class="line">            DormBuild dormBuild = dormService.getDormBuildsByUserId(student.getId());</span><br><span class="line">            req.setAttribute(<span class="string">&quot;userBuildids&quot;</span>,dormBuild.getId());</span><br><span class="line"></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;studentAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;deleteOrActive&quot;</span>.equals(action))&#123;</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            String disabled = req.getParameter(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line"></span><br><span class="line">            User user = userService.getStudentById(Integer.parseInt(id));</span><br><span class="line">            user.setDisabled(Integer.parseInt(disabled));</span><br><span class="line">            userService.updateStudent(user);</span><br><span class="line">            resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/student.action?action=list&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="功能四：宿舍楼管理"><a href="#功能四：宿舍楼管理" class="headerlink" title="功能四：宿舍楼管理"></a>功能四：宿舍楼管理</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        String action = req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line">        DormBuildService dormBuildService = <span class="keyword">new</span> DormBuildServiceImpl();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;list&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//查询所有宿舍楼</span></span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            List&lt;DormBuild&gt; dormBuilds = dormBuildService.getAllDormBuild(id);</span><br><span class="line">            List&lt;DormBuild&gt; dormBuildSelects = dormBuildService.getAllDormBuild();</span><br><span class="line">            req.setAttribute(<span class="string">&quot;builds&quot;</span>,dormBuilds);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;buildSelects&quot;</span>,dormBuildSelects);</span><br><span class="line">            <span class="comment">//返回页面</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;dormBuildList.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preAdd&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//返回页面</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;dormBuildAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;save&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//获取前端请求数据</span></span><br><span class="line">            String name = req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">            String remark = req.getParameter(<span class="string">&quot;remark&quot;</span>);</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (id == <span class="keyword">null</span> || id.equals(<span class="string">&quot;&quot;</span>))&#123;</span><br><span class="line">                DormBuild dormBuild = <span class="keyword">new</span> DormBuild();</span><br><span class="line">                dormBuild.setName(name);</span><br><span class="line">                dormBuild.setRemark(remark);</span><br><span class="line">                dormBuildService.saveDormBuild(dormBuild);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                DormBuild dormBuild = dormBuildService.getDormBuildsById(id);</span><br><span class="line">                dormBuild.setName(name);</span><br><span class="line">                dormBuild.setRemark(remark);</span><br><span class="line">                dormBuildService.updateDormBuild(dormBuild);</span><br><span class="line">            &#125;</span><br><span class="line">            resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/dormBuild.action?action=list&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preUpdate&quot;</span>.equals(action))&#123;</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            DormBuild dormBuild = dormBuildService.getDormBuildsById(id);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;build&quot;</span>,dormBuild);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;dormBuildAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;deleteOrAcive&quot;</span>.equals(action))&#123;</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            String disabled = req.getParameter(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line"></span><br><span class="line">            DormBuild dormBuild = dormBuildService.getDormBuildsById(id);</span><br><span class="line">            dormBuild.setDisabled(Integer.parseInt(disabled));</span><br><span class="line">            dormBuildService.updateDormBuild(dormBuild);</span><br><span class="line">            resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/dormBuild.action?action=list&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="功能五：缺勤记录"><a href="#功能五：缺勤记录" class="headerlink" title="功能五：缺勤记录"></a>功能五：缺勤记录</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        String action = req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line">        RecordService recordService = <span class="keyword">new</span> RecordServiceImpl();</span><br><span class="line">        DormBuildService dormBuildService = <span class="keyword">new</span> DormBuildServiceImpl();</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;list&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//返回页面</span></span><br><span class="line">            String startDate = req.getParameter(<span class="string">&quot;startDate&quot;</span>);</span><br><span class="line">            String endDate = req.getParameter(<span class="string">&quot;endDate&quot;</span>);</span><br><span class="line">            String dormBuildId = req.getParameter(<span class="string">&quot;dormBuildId&quot;</span>);</span><br><span class="line">            String searchType = req.getParameter(<span class="string">&quot;searchType&quot;</span>);</span><br><span class="line">            String keyword = req.getParameter(<span class="string">&quot;keyword&quot;</span>);</span><br><span class="line">            List&lt;DormBuild&gt; dormBuilds = dormBuildService.getAllDormBuild();</span><br><span class="line">            List&lt;Record&gt; records = recordService.getStudentRecord(startDate,endDate,dormBuildId,searchType,keyword);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;builds&quot;</span>,dormBuilds);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;records&quot;</span>,records);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;recordList.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preAdd&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="comment">//返回页面</span></span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;recordAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;save&quot;</span>.equals(action))&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                String stuCode = req.getParameter(<span class="string">&quot;stuCode&quot;</span>);</span><br><span class="line">                String date = req.getParameter(<span class="string">&quot;date&quot;</span>);</span><br><span class="line">                String remark = req.getParameter(<span class="string">&quot;remark&quot;</span>);</span><br><span class="line">                String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (id == <span class="keyword">null</span> || id.equals(<span class="string">&quot;&quot;</span>))&#123;</span><br><span class="line">                    Record record = <span class="keyword">new</span> Record();</span><br><span class="line">                    record.setRemark(remark);</span><br><span class="line">                    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">                    record.setDate(sdf.parse(date));</span><br><span class="line">                    record.setDisabled(<span class="number">0</span>);</span><br><span class="line">                    recordService.saveRecord(record,stuCode);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    User user = userService.getStudentByStuCode(stuCode);</span><br><span class="line">                    Record record = recordService.getStudentRecordById(Integer.parseInt(id));</span><br><span class="line">                    record.setStudentId(user.getId());</span><br><span class="line">                    record.setRemark(remark);</span><br><span class="line">                    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">                    record.setDate(sdf.parse(date));</span><br><span class="line">                    record.setDisabled(<span class="number">0</span>);</span><br><span class="line">                    recordService.updateRecord(record);</span><br><span class="line">                &#125;</span><br><span class="line">                resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/record.action?action=list&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;preUpdate&quot;</span>.equals(action))&#123;</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            Record record = recordService.getStudentRecordById(Integer.parseInt(id));</span><br><span class="line">            req.setAttribute(<span class="string">&quot;record&quot;</span>,record);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;recordAddOrUpdate.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;deleteOrAcive&quot;</span>.equals(action))&#123;</span><br><span class="line">            String id = req.getParameter(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">            String disabled = req.getParameter(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">            Record record = recordService.getStudentRecordById(Integer.parseInt(id));</span><br><span class="line">            record.setDisabled(Integer.parseInt(disabled));</span><br><span class="line">            recordService.updateRecord(record);</span><br><span class="line">            resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/record.action?action=list&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="功能六：修改密码"><a href="#功能六：修改密码" class="headerlink" title="功能六：修改密码"></a>功能六：修改密码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html; charset=utf-8&quot;</span>);</span><br><span class="line">        String action = req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;preChange&quot;</span>.equals(action))&#123;</span><br><span class="line">            req.setAttribute(<span class="string">&quot;mainRight&quot;</span>,<span class="string">&quot;passwordChange.jsp&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/jsp/main.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;ajaxOldPassWord&quot;</span>.equals(action))&#123;</span><br><span class="line">            String oldPassWord = req.getParameter(<span class="string">&quot;oldPassWord&quot;</span>);</span><br><span class="line">            User login_user = (User) req.getSession().getAttribute(<span class="string">&quot;session_user&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!oldPassWord.equals(login_user.getPassword()))&#123;</span><br><span class="line">                String msg = <span class="string">&quot;与原密码不符，请重新输入！&quot;</span>;</span><br><span class="line">                resp.getWriter().append(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;change&quot;</span>.equals(action))&#123;</span><br><span class="line">            String newPassword = req.getParameter(<span class="string">&quot;newPassword&quot;</span>);</span><br><span class="line">            User login_user = (User) req.getSession().getAttribute(<span class="string">&quot;session_user&quot;</span>);</span><br><span class="line">            User user = userService.getStudentById(login_user.getId());</span><br><span class="line">            user.setPassword(newPassword);</span><br><span class="line">            userService.updatePassword(user);</span><br><span class="line">            resp.sendRedirect(getServletContext().getContextPath()+<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="实验心得"><a href="#实验心得" class="headerlink" title="实验心得"></a>实验心得</h2><pre><code>这次实训我感触良多，在校期间，一直忙于理论知识的学习，只能偶尔练习一些小程序，没有机会也没有相应的经验来参与项目的开发。所以在实训之前，软件项目开发对我来说是比较抽象的，一个完整的项目要怎么来分工以及完成该项目所要的基本步骤也不明确。通过这次实训，对于javaweb的应用有了更加清晰的认知，对于企业的开发工作也有了深刻的理解。我这次收获颇丰。学生宿舍管理项目是每一所学校必备的一个项目。是一个十分经典的项目。同时我也发现了不曾注意到的细节，在实训的演示过程中，我对作为一名Java工程师注意的事项应该从小事做起、从基本做起。把职业能力训练与职业素质有机的结合起来。相信这对我接下来学习专业知识会起到很有效的帮助，在接下来的几个月里，我会以作为一名职业人的身份在这几个方面要求自己，严格自我，向Java工程师靠近。总之，这次实训为我提供了与众不同的学习方法和学习体会，从书本中面对现实，为我将来走上社会打下了扎实的基础。作为在校计算机专业的学生，现在我能做的就是吸取知识，提高自身的综合素质，提高自己的职业技能，自己有了能力，到时候才会是 “车到山前必有路”。我相信在不久的未来，会有属于我自己的一片天空。</code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdbc </tag>
            
            <tag> javaweb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Demo</title>
      <link href="/2021/11/07/Demo/"/>
      <url>/2021/11/07/Demo/</url>
      
        <content type="html"><![CDATA[<h2 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h2><p>寫法    解釋<br>title    【必需】文章標題<br>date    【必需】文章創建日期<br>updated    【可選】文章更新日期<br>tags    【可選】文章標籤<br>categories    【可選】文章分類<br>keywords    【可選】文章關鍵字<br>description    【可選】文章描述<br>top_img    【可選】文章頂部圖片<br>cover    【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)<br>comments    【可選】顯示文章評論模塊(默認 true)<br>toc    【可選】顯示文章TOC(默認為設置中toc的enable配置)<br>toc_number    【可選】顯示toc_number(默認為設置中toc的number配置)<br>copyright    【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)<br>copyright_author    【可選】文章版權模塊的文章作者<br>copyright_author_href    【可選】文章版權模塊的文章作者鏈接<br>copyright_url    【可選】文章版權模塊的文章連結鏈接<br>copyright_info    【可選】文章版權模塊的版權聲明文字<br>mathjax    【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br>katex    【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br>aplayer    【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br>highlight_shrink    【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)<br>aside    【可選】顯示側邊欄 (默認 true)</p>]]></content>
      
      
      <categories>
          
          <category> Demo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Demo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
